{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Desktop/Jobly/FrontEntJobly/JoblyReact-main/src/Components/Auth/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from '../Firebase/config';\nimport Loader from '../../Jobs/Loader';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const signInWithGoogle = () => {\n    const auth = getAuth();\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider).then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken; // The signed-in user info.\n\n      const user = result.user; // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message; // The email of the user's account used.\n\n      const email = error.customData.email; // The AuthCredential type that was used.\n\n      const credential = GoogleAuthProvider.credentialFromError(error); // ...\n    });\n  };\n\n  const loginUser = e => {\n    e.preventDefault();\n    setLoading(true);\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      toast.success(\"Uğurla Tamamlandı!\");\n      const user = userCredential.user;\n      console.log(user);\n      setLoading(false);\n      navigate(\"/\");\n    }).catch(error => {\n      setLoading(false);\n      toast.error(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container text-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: loginUser,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"m-2\",\n            placeholder: \"Emaili daxil edin.\",\n            required: true,\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"m-2\",\n            placeholder: \"\\u015Eifr\\u0259ni daxil edin.\",\n            required: true,\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: signInWithGoogle,\n          className: \"btn btn-primary\",\n          children: \"Daxil Olun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"links\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/reset\",\n            children: \"\\u015Eifr\\u0259ni Yenil\\u0259\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"-- v\\u0259 ya --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-danger\",\n        children: \" Google il\\u0259 Daxil Olun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hesab\\u0131n\\u0131z Yoxdur?\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Qeydiyyatdan Ke\\xE7in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"NK2FMFMN32fBMhpoGBlVxxv7x+w=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","Link","useNavigate","signInWithEmailAndPassword","auth","Loader","getAuth","signInWithPopup","GoogleAuthProvider","Login","email","setEmail","password","setPassword","loading","setLoading","navigate","signInWithGoogle","provider","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","customData","credentialFromError","loginUser","e","preventDefault","userCredential","success","console","log","target","value"],"sources":["/Users/imac/Desktop/Jobly/FrontEntJobly/JoblyReact-main/src/Components/Auth/Login/Login.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport './Login.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from '../Firebase/config'\nimport Loader from '../../Jobs/Loader'\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n\n\n\n\nfunction Login() {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const navigate = useNavigate();\n\n    const signInWithGoogle = () => {\n\n        const auth = getAuth();\n        const provider = new GoogleAuthProvider();\n        signInWithPopup(auth, provider)\n            .then((result) => {\n                // This gives you a Google Access Token. You can use it to access the Google API.\n                const credential = GoogleAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n                // The signed-in user info.\n                const user = result.user;\n                // ...\n            }).catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // The email of the user's account used.\n                const email = error.customData.email;\n                // The AuthCredential type that was used.\n                const credential = GoogleAuthProvider.credentialFromError(error);\n                // ...\n            });\n\n    }\n    const loginUser = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                toast.success(\"Uğurla Tamamlandı!\");\n                const user = userCredential.user;\n                console.log(user);\n                setLoading(false);\n                navigate(\"/\")\n\n            })\n            .catch((error) => {\n                setLoading(false);\n                toast.error(error.message);\n            });\n    }\n\n    return (\n        <section className='container text-center'>\n            <div className='form'>\n                <h2>Login</h2>\n                <form onSubmit={loginUser}>\n                    <div>\n                        <input type='text' className='m-2' placeholder='Emaili daxil edin.'\n                            required value={email} onChange={(e) => setEmail(e.target.value)} />\n                        <input type='text' className='m-2' placeholder='Şifrəni daxil edin.'\n                            required value={password} onChange={(e) => setPassword(e.target.value)} />\n                    </div>\n                    {loading && <Loader />}\n                    <button onClick={signInWithGoogle} className='btn btn-primary'>Daxil Olun</button>\n                    <div className='links'>\n                        <Link to='/reset'>\n                            Şifrəni Yenilə\n                        </Link>\n                    </div>\n                    <p>-- və ya --</p>\n                </form>\n                <ToastContainer />\n                <button type='submit' className='btn btn-danger'> Google ilə Daxil Olun</button>\n                <p>\n                    Hesabınız Yoxdur?\n                    <Link to='/register'>Qeydiyyatdan Keçin</Link>\n                </p>\n            </div>\n        </section>\n    )\n}\n\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module"}